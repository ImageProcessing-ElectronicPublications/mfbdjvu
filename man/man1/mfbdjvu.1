.TH "MFBdjuu" 1 1.5 "24 Jan 2023" "User Manual"

.SH NAME
mfbdjvu

.SH DESCRIPTION
MFBdjvu is a simple project for easy converting pgm and ppm to (MASK+FG+BG)-djvu.
It uses djvulibre[1] for all technichal work and compression.
The breakdown of the image into components is done using DjVuL[2] and DjVuL wiki[3].

MFBdjvu based of simpledjvu[4].

.SH SYNOPSIS
mfbdjvu [options] input.pnm output.djvu

.SH OPTIONS
.TP
-mask mask.pbm
{NULL} exist mask file.
.TP
-dpi n
{300} DPI output djvu.
.TP
-loss n
{1} Use n as cjb2 loss level (see djvulibre cjb2 tool description).
.TP
-quality n
{75} Use n as parameter {0 - Inf} for generate slices, see down.
.TP
-slices_bg n1,n2,...
{74,84,88,97} Use n1,n2,... as number of slices for c44 for background (see djvulibre c44 tool description) {== -quality 75}.
.TP
-slices_fg n1,n2,...
{100} Use n1,n2,... as number of slices for c44 for foreground {== -quality 75}.
.TP
-levels n
{0} Level DjVuL block, 0 - auto.
.TP
-bgs n
{3} Background and Foreground downsample.
.TP
-fgs n
{2} Foreground more downsample.
.TP
-overlay n
{50} Block overlay DjVuL in percent.
.TP
-anisotropic n
{0} The main regulator DjVuL in percent. More than zero - more details, less than zero - less details.
.TP
-contrast n
{0} Auxiliary regulator DjVuL in percent (sharpen).
.TP
-fbs n
{100} and delta...
.TP
-delta n
{0} Additional regulation DjVuL of BG/FG according to the linear law: FG * fbs + delta != BG
.TP
-black
Using black BG as the base, not white.

You can use Netpbm[5] or any other similar tool to obtain `pgm` or `ppm` from other format.

.SH EXAMPLE
 mfbdjvu mona.ppm mona.djvu

.SH NOTES
DjVuL description.

The base of the algorithm[3] was obtained in 2016 by studying the works monday2000[6] and adapting them to Linux.
The prerequisite was the BookScanLib[7] project  and the algorithm DjVu Thresholding Binarization[8].
This algorithm embodied good ideas, but had a recursive structure, was a "function with discontinuities" and had a hard color limit.
The result of this algorithm, due to the indicated shortcomings and the absence of regulators, was doubtful.
After careful study, all the foundations of the specified algorithm were rejected.
The new algorithm is based on levels instead of recursion, a smooth weight function is used instead of a "discontinuous" one, no color restriction, BG/FG selection controls are enabled.
The new algorithm allowed not only to obtain a much more adequate result, but also gave derivative functions: image division into BG/FG according to the existing mask.

.SH COPYRIGHT
GNU GENERAL PUBLIC LICENSE Version 2.

.SH SEE ALSO
cjb2(1), c44(1), djvuextract(1), djvumake(1)

.SH CONTACTS
Website: https://github.com/ImageProcessing-ElectronicPublications/mfbdjvu

.SH LINKS
 [1](http://djvu.sourceforge.net/)
 [2](https://github.com/plzombie/depress/issues/2)
 [3](https://sourceforge.net/p/imthreshold/wiki/DjVuL/?version=3)
 [4](https://github.com/mihaild/simpledjvu)
 [5](https://sourceforge.net/projects/netpbm/)
 [6](http://djvu-soft.narod.ru/)
 [7](http://djvu-soft.narod.ru/bookscanlib/)
 [8](http://djvu-soft.narod.ru/bookscanlib/034.htm)
 [depress](https://github.com/plzombie/depress)
 [stb-image-djvul](https://github.com/ImageProcessing-ElectronicPublications/stb-image-djvul)
 [tesseract](https://github.com/tesseract-ocr/tesseract)
 [hocr-tools](https://github.com/ocropus/hocr-tools)
 [imthreshold](https://github.com/ImageProcessing-ElectronicPublications/imthreshold)
 [aithreshold](https://github.com/ImageProcessing-ElectronicPublications/aithreshold)
